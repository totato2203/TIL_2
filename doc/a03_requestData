# 요청데이터 처리
1. 클라이언트(브라우저)에서 서버(WAS-톰캣 안에 java단) 프로그램에 요청하는 처리를 말한다.
2. 요청은 클라이언트단 화면이나 querystring(url), 내부 요청으로 브라우저(클라이언트)단에서
	할 수 있는데, 요청값을 받는 프로그램을 오직 backend 프로그램(java)만 할 수 있다.
	
	클라이언트(브라우저) =====> 서버(WAS-tomcat)
				url(요청) 페이지명?key=value (get)
				요청body에서 key=value (post)
					<=====
	
3. 요청값 핵심개념
	query string
	요청할페이지?key=value&key=value
	요청할페이지?요청키1=요청값1&요청키2=요청값2
	1) get방식으로 url 통해서 요청값을 넘기는 방식
		요청할페이지?key=value&key=value
	
4. 서버에서 받는 처리
	1) java jsp
		String value=request.getParameter("요청key")
		String[] arrval=request.getParameterValues("요청key")
		// 요청키로 받은 데이터는 value 변수 안에 요청값으로 받는다.
	2) el : ${param.요청key}
	3) usebean을 이용해서 객체로 받기
	4) controller에서 Class로 받기
	
5. 다양한 사용자 인터페이스를 활용하여 요청key 요청값을 받기
	<form action="요청페이지">
		<input name="요청key" value="요청값">
		모양은 type="text|password|radio|checkbox|number|date|..."
		<select name="요청key">
			<option>요청값
			<option>요청값
			<option>요청값
		<textarea> ...
	1) form 하위의 객체들의 종류 html로 확인하기
	2) form 하위 객체들을 처리하는 css 확인하기
	3) form의 속성과 submit/reset 버튼의 기능, 각 요소 객체들이 요청값 전송 시 특징 확인하기
		- 각 요소별 특징
			단일 데이터 전송
			멀티 데이터 전송
		- 요청값을 받을 때, null에 대한 처리, 숫자형 데이터에 대한 처리 방법
			기본 처리방법
			함수를 활용한 처리 방법
	4) form 요청값 처리 시 서버에 넘어가기 전 처리할 javascript 확인
	5) form과 table 등 화면 css/js가 적용된 여러가지 내용 확인해보기
