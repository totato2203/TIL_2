# 웹 화면에서 리스트 등록/수정/삭제 처리
1. 데이터 등록 처리
	1) 메인 화면에서 등록 버튼 생성 및 등록 화면으로 이동 처리(js)
		함수 호출 : location.href="등록화면"
		
	2) 등록화면 UI 구성(a02_empInsert.jsp)
		html/css 처리
		필수 입력 항목 설정 js로 처리
		요청값 확인(등록데이터)
		등록 DAO 구성 및 기능 메소드 호출
		등록 완료 후 처리 process
			- confirm() 활용
				계속 등록
				list 화면으로 이동 처리
2. 메인화면에 등록화면 이동 처리 js
	0) a02_empList.jsp 페이지 타이틀(사원등록)
	1) 기능함수 선언(a01_empSchList.jsp)
		function goInsertPage(){
			location.href="a02_empInsert.jsp";
		}
	2) 버튼 선언과 이벤트 핸들러 함수 처리
		<input type="button" value="사원등록화면" onclick="goInsertPage()"/>
		
3. 등록화면 UI 구성
	1) 등록할 항목 결정 : sql insert를 통해서 확인
		insert into emp01 values(1000, '홍길동', '사원', 7780,
			to_date('2020-06-21', 'YYYY-MM-DD'), 3500, 1000, 10);
		vo 객체에 이 데이터를 받는 생성자를 확인
		화면 처리
			사원번호, 사원명, 직책명, 관리자번호, 입사일, 급여, 보너스, 부서번호
			empno	enam  job	mmr  hiredateS sal comm  deptno
	2) insert 항목 기준으로 입력할 form 하위 객체들 지정
		<input type="text" name="ename" placeHolder="사원명을 입력"/>
		empno, ename, job, mgr, hiredateS, sal, comm, deptno
		
		@@@ : empno, ename, job, mgr, hiredateS, sal, comm, deptno
		### : 사원번호, 사원명, 직책명, 관리자명, 입사일, 급여, 보너스, 부서번호
		
		<div class="row">
  		 	<div class="col-25">
    			<label for="@@@">###</label>
   		</div>
			<div class="col-75">
				<input type="text" id="@@@" name="@@@" value="" placeholder="### 입력..">
			</div>
		</div>
	
4. 필수입력항복 설정 js로 처리 요청값 확인(등록데이터)
	<input type="submit" ==> <input type=""button" onclick="regEmp()"
	function regEmp(){
		var empnoObj = document.querySelector("#empno");
		var enameObj = document.querySelector("#ename");
		var hiredateSObj = document.querySelector("#hiredateS");
		if(empnoObj.value==""){
			alert("사원번호를 입력하세요");
			empnoObj.focus();
			return;
		}
		if(enameObj.value==""){
			alert("사원명을 입력하세요");
			enameObj.focus();
			return;
		}
		if(hiredateSObj.value==""){
			alert("입사일을 입력하세요");
			hiredateSObj.focus();
			return;
		}
		document.querySelector("form").submit();
	}
	
	<%
	// empno, ename, job, mgr, hiredateS, sal, comm, deptno
	
	int empno, mgr, deptno; empno = mgr = deptno = 0;
	double sal, comm; sal = comm = 0;
	
	String empnoS = request.getParameter("empno");
	if(empnoS != null) empno = Integer.parseInt(empnoS);
	
	String mgrS = request.getParameter("mgr");
	if(mgrS != null) mgr = Integer.parseInt(mgrS);
	
	String deptnoS = request.getParameter("deptno");
	if(deptnoS != null) deptno = Integer.parseInt(deptnoS);
	
	
	String salS = request.getParameter("sal");
	if(salS != null) sal = Double.parseDouble(salS);
	
	String commS = request.getParameter("comm");
	if(commS != null) comm = Double.parseDouble(commS);
	
	
	String ename = request.getParameter("ename"); if(ename == null) ename = "";
	String job = request.getParameter("job"); if(job == null) job = "";
	String hiredateS = request.getParameter("hiredateS"); if(hiredateS == null) hiredateS = "";
	
	log("empno : " + empno); log("mgr : " + mgr); log("deptno : " + deptno);
	log("sal : " + sal); log("comm : " + comm);
	log("ename : " + ename); log("job : " + job); log("hiredateS : " + hiredateS);
	%>
	
5. 등록처리 DAO 호출 및 완료
    1) sql ==> VO ==> 기능메서드
    2) jsp
        요청값을 기능메서드에 매개변수 Emp 객체로 넘기기 위해서
        new Emp(요청값..... )
        순서와 타입을 정확하게 확인
        - 조건 : 데이터가 입력되었을 때,
            String isIns = "N";
            if(empnoS!=null && empnoS.trim()equals("")){
                dao.insertEmp(new Emp(#####));
                isIns = "Y";
            }
        - confirm 등록 되었음을 표시,
            계속 등록할지? 등록된 전체 조회화면으로 갈지를 설정
            자바 ==> javascript
            var isIns = "<%=isIns%>";
            if(isIns=="Y"){
                // confirm() : true/false
                if(confirm("등록 성공\n조회 화면으로 이동하시겠습니까?")){
                    location.href="a01_empSchList.jsp";
                }
            }
            
            
            
# 사원상세화면(수정/삭제할 수 있는 화면)
1. 업무 처리 순서
    row단위로 클릭시, row에 있는 key empno를 기준으로 데이터를 검색해서
    상세화면이 로딩되어 저장된 데이터를 출력
    데이터를 변경 후, 수정 버튼 클릭시, 수정이 처리되고,
    삭제버튼 클릭시, row단위로 삭제가 되고 화면이동이 처리된다.
2. 상세화면 로딩
    1) dao 기능 메서든 만들기
        sql : select * from emp where empno = @@@
        Emp 객체를 가져온다.
    2) 상세화면 전환 사용 인터페이스 정의
        테이블 리스트에서 특정한 row를 더블클릭시, key를 가져와서
        상세화면으로 이동 처리
        tr onclick="goDetail(1000)"
        function goDetail(empno){
            location.href="a03_empDetail.jsp?empno="+empno;
        }
        - 상세화면 구성 : 요청값을 key를 받을 수 있게..
    3) a03_empDetail.jsp(상세화면)
        String empnos = request.getParameter("empno");
        int empno = 0;
        if(empnos!=null&&!empnos.trim().equals("")){
            empno = Integer.parseInt(empno);
        }
    4) 상세화면 form 화면 구성
    5) DAO에서 만든 기능 메서드를 통해서 받은 Emp객체를 getXXX()
        value="<%emp.getEmpno()%>"
3. 수정 처리
    1) 수정 처리하는 dao 기능 메서드
    2) 수정 버튼 클릭시, form는 내용 전송 및 요청값 받기.
        수정 버튼 ==> 수정 DAO 처리
        삭제 버튼 ==> 삭제 DAO 처리
        <input type="hidden" name="proc"/>
        var proc = document.querySelector("[name=proc]");
        procObj.value="upt";
        procObj.value="del";
        ?proc=upt
        ?proc=del
        String proc = request.getParameter("proc");
        if(proc.equals("upt")){
            // 수정 처리 dao
        }
        if(proc.equals("del")){
            // 삭제 처리 dao
        }
    3) 요청값 처리하기
        요청값 ==> Emp upt = new Emp(....)
    4) 요청값이 proc가 있고 upt일 때
        dao.uptEmp(upt);
        다시 수정 후 조회된 데이터 가져오기.
        emp = dao.getEmpDetail(empno);
    5) js
        var proc = "<%=proc%>";
        if(proc!=""){
            if(proc=="upt"){
                if(confirm("수정되었습니다\n리스트화면이동?")){
                    location.href="";
                }
            }
        }
	
	
	
	
	